The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.

Given n, calculate F(n).

Example 1:

Input: n = 2
Output: 1
Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.

Example 2:

Input: n = 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.

Example 3:

Input: n = 4
Output: 3
Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.

 

Constraints:

    0 <= n <= 30

Solution ----------------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


class Solution {
    static int dp[];
    // public int fibo(int n) {   
    //     if(n<=1) return n ; 
    //     if(dp[n]!=0)
    //     return dp[n];
              
    //     return dp[n]= fibo(n-1)+fibo(n-2);
    // }

    public int fib(int n) {   
        // dp =  new int [n+1];      
        // return fibo(n);
        dp =  new int [3];
        dp[0]=0;
        dp[1]=1;
        if(n<=1) return n;
        for(int i=2;i<=n;i++){
          
            dp[2]=dp[1]+dp[0];
            dp[0]=dp[1];
            dp[1]=dp[2];
        }
        return dp[2];
    }
}}

